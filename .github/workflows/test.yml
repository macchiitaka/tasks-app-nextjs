name: Test
on: [push, pull_request]

jobs:
  lint:
    name: Lint
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
        node: [14]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      #      - name: Read Node.js version
      #        uses: nodenv/actions-node-version
      #        id: nodenv
      - id: nodenv
        uses: nodenv/actions/node-version
        with:
          nodenv-version: '1.3.1'
      - run: echo ${{ steps.nodenv.outputs.node-version }}
      - name: Set Node.js ${{ steps.nodenv.outputs.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ steps.nodenv.outputs.node-version }}
      - name: Install npm and yarn
        run: npm i npm yarn@1 -g
      # https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache NPM
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint
